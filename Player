public class Player extends Character{
    // The Character that the user will control

    // Instance Variables


    private boolean jumpStatus; // If true the Player is able to call the Jump method
    private boolean dashStatus; // If true the Player is able to call the Dash Method
    private static final int JUMPHEIGHT = 5;
    private static final int DASHLENGTH = 5;
    private static final int PLAYERSPEED = 1;

    // Constructor

    public Player(Character original) {
        // Makes a Player object as a Character object
        super(original);
    }

    public Player(String name){
        // Default constructor of a Player Obj

        this.setName(name);
    }

    public Player(){
    }

    // Methods

    
    // Setters


    // Getters

    public boolean getJumpStatus(){
        // Returns the value of jumpStatus
        return this.jumpStatus;
    }
    
    public boolean getDashStatus(){
        // Returns the value of dashStatus
        return this.dashStatus;
    }
    
    public int getPLAYERSPEED(){
        //Returns the Players Speed value
        return PLAYERSPEED;
    }
    
    // Actions
    // KeyBoardInput class will use these methods

    public void jump(){
        // Current version of this method will instantly move the character to the Ycord + JUMPHEIGHT... wait a bit and fall back down
        // Version with GUI should gradually raise the players Y value

        this.setTo(this.getX(), this.getY() + JUMPHEIGHT);
    }
    
    public void dashRight(){
        // Changes the current position of the player with respect to x_cord after using the dash facing right

        this.setTo(this.getX() + DASHLENGTH, this.getY());
    }

    public void dashLeft(){
        // Changes the current position of the player with respect to the x_cord after using the dash facing left

        this.setTo(this.getX() - DASHLENGTH, this.getY());
    }

    public void dashUp(){
        // Changes the current position of the player with respect to the y_cord after using the dash upward

        this.setTo(this.getX(), this.getY() + DASHLENGTH);
    }
    
    public void moveRight(Character player) {
        // This will take the objects x_cord and move it according to the Player speed to the right

        this.setTo(this.getX() + PLAYERSPEED, this.getY());
    }
    
    public void moveLeft(Character player) {
        // This will take the objects x_cord and move it according to the Player speed to the left

        this.setTo(this.getX() - PLAYERSPEED, this.getY());
    }
}
